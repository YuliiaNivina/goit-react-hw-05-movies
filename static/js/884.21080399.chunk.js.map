{"version":3,"file":"static/js/884.21080399.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport * as getMovies from 'services/moviesApi';\n\nconst MovieDetail = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    getMovies\n      .fetchMovieById(movieId)\n      .then(setMovieById)\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  if (!movieById) {\n    return <div>Loading...</div>;\n  }\n\n  const {\n    poster_path,\n    title,\n    genres,\n    id,\n    vote_average,\n    overview,\n    release_date,\n  } = movieById;\n\n  const movieSort = {\n    genres:\n      genres.length <= 3\n        ? genres.map(genre => genre.name).join(' ')\n        : genres\n            .map(genre => genre.name)\n            .slice(0, 2)\n            .join(' ') + ' Other',\n    voteAverage: vote_average.toFixed(1) * 10,\n    overview,\n    releaseDate: release_date.slice(0, 4),\n  };\n\n  const backLink = location.state?.from ?? '/';\n  const defaultImg = `https://www.restorixhealth.com/wp-content/uploads/2018/08/No-Image.png`;\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <p>Loading...</p>}\n      <Link to={backLink}>Go back</Link>\n      {movieById && (\n        <>\n          <div className=\"movieById__container\">\n            <img\n              className=\"poster__foto\"\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImg\n              }\n              alt={title}\n              width=\"250\"\n            />\n            <div>\n              <h2>\n                {title} <span>({movieSort.releaseDate})</span>\n              </h2>\n              <p>User Score: {movieSort.voteAverage}%</p>\n              <h2>Overview</h2>\n              <p>{movieSort.overview}</p>\n              <h3>Genres</h3>\n              <p>{movieSort.genres}</p>\n            </div>\n          </div>\n          <div className=\"movie__info\">\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link\n                  to={`/movies/${id}/cast`}\n                  state={{ from: location.state?.from } ?? '/'}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`/movies/${id}/reviews`}\n                  state={{ from: location.state?.from } ?? '/'}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetail;\n","import axios from 'axios';\n\nconst API_KEY = 'de2f3a0c57a311cc48a85909660d7281';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (url = '') => {\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport async function fethTrendingMovies() {\n  const data = await fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const data = await fetchMovies(\n    `${BASE_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n"],"names":["movieId","useParams","useState","movieById","setMovieById","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","getMovies","then","catch","message","finally","poster_path","title","genres","id","vote_average","overview","release_date","movieSort","length","map","genre","name","join","slice","voteAverage","toFixed","releaseDate","backLink","state","from","to","className","src","alt","width","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","console","fethTrendingMovies","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesBySearch","searchQuery"],"sourceRoot":""}