{"version":3,"file":"static/js/736.ef350619.chunk.js","mappings":"8LA0CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACHT,IACLM,GAAa,GACbI,EAAAA,GACqBV,GAClBW,KAAKP,GACLQ,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,kBAAMR,GAAa,EAAnB,IACZ,GAAE,CAACN,KAGF,gCACGO,IAAS,0DAAkCA,EAAMM,WACjDR,IAAa,sCACbF,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,yBACE,4BACE,qCAAaF,MACb,uBAAIC,QAHCC,EADE,OAUf,uEAIP,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as getMovies from 'services/moviesApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    getMovies\n      .fetchMovieReviews(movieId)\n      .then(setReviews)\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <p>Loading...</p>}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <div>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","getMovies","then","catch","message","finally","length","map","author","content","id"],"sourceRoot":""}