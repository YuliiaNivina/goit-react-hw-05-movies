{"version":3,"file":"static/js/493.1017b5dd.chunk.js","mappings":"8LAmDA,UA/Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACHT,IACLM,GAAa,GACbI,EAAAA,GACkBV,GACfW,KAAKP,GACLQ,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,kBAAMR,GAAa,EAAnB,IACZ,GAAE,CAACN,IAIJ,OACE,gCACGO,IAAS,0DAAkCA,KAC3CF,IAAa,sCACZF,EAAKY,OAAS,GACd,wBACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,GAAIC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IACEJ,EAAY,0CAC2BA,GAbvC,yEAgBFK,IAAKJ,EACLK,MAAM,SAER,uBAAIL,KACJ,uCAAeE,OAXRD,EADD,OAiBZ,oEAIP,C,+LC/CKK,EAAU,mCACVC,EAAW,+BAEXC,EAAW,mCAAG,2GAAOC,EAAP,+BAAa,GAAb,kBAEOC,EAAAA,EAAAA,IAAUD,GAFjB,cAEVE,EAFU,OAGVC,EAAOD,EAASC,KAHN,kBAKTA,GALS,gCAOhBC,QAAQxB,MAAR,MAPgB,yDAAH,qDAWV,SAAeyB,IAAtB,4CAAO,OAAP,oBAAO,oGACcN,EAAY,GAAD,OACzBD,EADyB,uCACcD,IAFvC,cACCM,EADD,yBAKEA,EAAKG,SALP,kEAQA,SAASC,EAAelC,GAC7B,OAAO0B,EAAY,GAAD,OAAID,EAAJ,kBAAsBzB,EAAtB,oBAAyCwB,GAC5D,CAEM,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnC,GAA9B,uFACc0B,EAAY,GAAD,OACzBD,EADyB,kBACPzB,EADO,4BACoBwB,IAF7C,cACCM,EADD,yBAKEA,EAAK3B,MALP,kEAQA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpC,GAAjC,uFACc0B,EAAY,GAAD,OACzBD,EADyB,kBACPzB,EADO,4BACoBwB,IAF7C,cACCM,EADD,yBAKEA,EAAKG,SALP,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcZ,EAAY,GAAD,OACzBD,EADyB,+BACMa,EADN,oBAC6Bd,IAFtD,cACCM,EADD,yBAKEA,EAAKG,SALP,kE","sources":["pages/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as getMovies from 'services/moviesApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    getMovies\n      .fetchMovieCast(movieId)\n      .then(setCast)\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  const defaultImg = `https://www.restorixhealth.com/wp-content/uploads/2018/08/No-Image.png`;\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error}</p>}\n      {isLoading && <p>Loading...</p>}\n      {(cast.length > 0) ? (\n        <ul>\n          {cast.map(({ profile_path, name, id, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n                width=\"100\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any cast for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'de2f3a0c57a311cc48a85909660d7281';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (url = '') => {\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport async function fethTrendingMovies() {\n  const data = await fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const data = await fetchMovies(\n    `${BASE_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","getMovies","then","catch","message","finally","length","map","profile_path","name","id","character","src","alt","width","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","console","fethTrendingMovies","results","fetchMovieById","fetchMovieCast","fetchMovieReviews","fetchMoviesBySearch","searchQuery"],"sourceRoot":""}