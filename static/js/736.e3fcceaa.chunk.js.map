{"version":3,"file":"static/js/736.e3fcceaa.chunk.js","mappings":"8LA0CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACHT,IACLM,GAAa,GACbI,EAAAA,GACqBV,GAClBW,KAAKP,GACLQ,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,IACXC,SAAQ,kBAAMR,GAAa,EAAnB,IACZ,GAAE,CAACN,KAGF,gCACGO,IAAS,0DAAkCA,EAAMM,WACjDR,IAAa,sCACbF,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,yBACE,4BACE,qCAAaF,MACb,uBAAIC,QAHCC,EADE,OAUf,uEAIP,C,+LCtCKC,EAAU,mCACVC,EAAW,+BAEXC,EAAW,mCAAG,2GAAOC,EAAP,+BAAa,GAAb,kBAEOC,EAAAA,EAAAA,IAAUD,GAFjB,cAEVE,EAFU,OAGVC,EAAOD,EAASC,KAHN,kBAKTA,GALS,gCAOhBC,QAAQpB,MAAR,MAPgB,yDAAH,qDAWV,SAAeqB,IAAtB,4CAAO,OAAP,oBAAO,oGACcN,EAAY,GAAD,OACzBD,EADyB,uCACcD,IAFvC,cACCM,EADD,yBAKEA,EAAKG,SALP,kEAQA,SAASC,EAAe9B,GAC7B,OAAOsB,EAAY,GAAD,OAAID,EAAJ,kBAAsBrB,EAAtB,oBAAyCoB,GAC5D,CAEM,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA8B/B,GAA9B,uFACcsB,EAAY,GAAD,OACzBD,EADyB,kBACPrB,EADO,4BACoBoB,IAF7C,cACCM,EADD,yBAKEA,EAAKM,MALP,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjC,GAAjC,uFACcsB,EAAY,GAAD,OACzBD,EADyB,kBACPrB,EADO,4BACoBoB,IAF7C,cACCM,EADD,yBAKEA,EAAKG,SALP,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcb,EAAY,GAAD,OACzBD,EADyB,+BACMc,EADN,oBAC6Bf,IAFtD,cACCM,EADD,yBAKEA,EAAKG,SALP,kE","sources":["pages/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as getMovies from 'services/moviesApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoading(true);\n    getMovies\n      .fetchMovieReviews(movieId)\n      .then(setReviews)\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <p>Loading...</p>}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <div>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'de2f3a0c57a311cc48a85909660d7281';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (url = '') => {\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport async function fethTrendingMovies() {\n  const data = await fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const data = await fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const data = await fetchMovies(\n    `${BASE_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}`\n  );\n\n  return data.results;\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","getMovies","then","catch","message","finally","length","map","author","content","id","API_KEY","BASE_URL","fetchMovies","url","axios","response","data","console","fethTrendingMovies","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews","fetchMoviesBySearch","searchQuery"],"sourceRoot":""}